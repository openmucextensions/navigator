configurations.create('embed')

repositories {
    // add maven local repository
    mavenLocal()
}

dependencies {
  compile group: 'org.osgi', name: 'osgi_R4_compendium', version: '1.0'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
  compile project(':openmuc-core-spi')
  compile project(':openmuc-core-api')
 
  // compile 'org.apache.httpcomponents:httpclient:4.3'
  // compile 'org.apache.httpcomponents:httpmime:4.3' 
  compile 'com.siemens.eadvantage:importengine:0.8'
  
  testCompile 'org.slf4j:slf4j-simple:1.7.12'
  testCompile 'org.mockito:mockito-all:1.10.19'
  
  // embed 'org.apache.httpcomponents:httpclient:4.3'
  // embed 'org.apache.httpcomponents:httpmime:4.3'
  embed 'com.siemens.eadvantage:importengine:0.8'
  
  // compile group: 'org.openmuc.jdlms', name: 'jdlms', version: jdlmsversion
  // embed group: 'org.openmuc.jdlms', name: 'jdlms', version: jdlmsversion
  // embed group: 'org.openmuc', name: 'jasn1-ber', version: jasn1berversion
}

jar {
  manifest {
    name = "OpenMUC Application - Siemens Advantage Navigator"
	instruction 'Bundle-ClassPath', 'lib/commons-codec-1.6.jar,lib/commons-logging-1.1.3.jar,lib/httpclient-4.3.jar,lib/httpcore-4.3.jar,lib/httpmime-4.3.jar,lib/importengine-0.8,.'
    instruction 'Service-Component', 'OSGI-INF/components.xml'
    instruction 'Export-Package', ''
    
    // Using * for Import-Package imports all necessary dependencies. The problem is,
    // that OSGi also tries to import self-contained libraries - so this packages
    // must be excluded like the following example shows: 
    
    instruction 'Import-Package', '!org.apache.http*, !com.siemens.eadvantage.ie*,javax.net.ssl, *'
  }
}

jar {
  into('lib') {
    from configurations.embed
  }
}

task "create-dirs" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}
